<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/>

   <!-- 数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql:///zjs_bos"/>
        <property name="user" value="zjs_user"/>
        <property name="password" value="123"/>
    </bean>



    <!--配置事务管理器-->
    <bean id="transcationManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>

    </bean>
    <!--
     配置sessionFactory
     -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <property name="hibernateProperties" >
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hbm2ddl.auto">update</prop>
            </props>
        </property>

        <property name="mappingDirectoryLocations">
            <list>
                <value>classpath:com/sober/bos/domain</value>
            </list>
        </property>
    </bean>
    <!--组件扫描-->
    <context:component-scan base-package="com.sober.bos"/>
    <!-- 支持spring注解(引入spring提供的注解解析器) -->
    <context:annotation-config/>
    <!--支持事务注解-->
    <tx:annotation-driven transaction-manager="transcationManager"/>


    <!--配置远程服务的代理对象-->
    <bean id="customerService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <!--注入接口类型-->
        <property name="serviceInterface" value="com.sober.bos.service.base.CustomerService"/>
        <!--注入服务的url地址-->
        <property name="serviceUrl" value="http://localhost:8081/crm/remoting/customer"/>
    </bean>



    <!--配置shiro的bean,使用当前工厂bean对象创建过滤器用于进行权限控制  name必须要和web.xml中配置的一致-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--注入安全管理器对象-->
        <property name="securityManager" ref="securityManager"/>
        <!--登陆的url地址-->
        <property name="loginUrl" value="/login.jsp"/>
        <!--成功的页面   配置到主页-->
        <property name="successUrl" value="/index.jsp"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <!--基于url拦截,使用过滤器进行拦截-->
        <property name="filterChainDefinitions">
            <!--自上而下匹配路径-->
                <value>
                      /css/** = anon
                      /images/** = anon
                        /js/**=anon
                    /validatecode.jsp*=anon
                    /login.jsp = anon
                    /userAction_login.action= anon
                    /page_base_staff.action =perms["staff"]
                    /** =authc
                </value>
        </property>
    </bean>

    <!--配置安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--注入安全数据桥-->
        <property name="realm" ref="bosrealm"></property>
        <!--注入缓存管理器-->
        <property name="cacheManager" ref="cacheManager"></property>
    </bean>


    <!--缓存管理器ehcache-->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
    </bean>

    <!--配置自定义的realm(安全数据桥)-->
    <bean id="bosrealm" class="com.sober.bos.web.realm.BosRealm"></bean>


    <!--配置cglib自动代理-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        <property name="proxyTargetClass" value="true"></property>
    </bean>
    <!--配置切面-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <!--<property name="securityManager" ref="securityManager"/>-->
    </bean>


</beans>